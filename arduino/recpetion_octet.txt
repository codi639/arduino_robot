/************************************************************************************************************************************************
 * Nom du fichier : Cherokey4WDMouvementsDeBase.ino                                                                                             *
 * Auteur : Guy Toutant                                                                                                                         *
 * Date de dernière modification : 1 avril 2023                                                                                                 *
 * Contrôle de la marche avant, du pivotement sur la droite, du virage vers la gauche et de l'arrêt du robot Cherokey 4WD.                      *
 * Broches du microcontrôleur servant au contrôle des roues du robot :                                                                          *
 * Broche 3 : GND pour les moteurs 1 et 3.                                                                                                      *
 * Broche 4 : VCC pour les moteurs 1 et 3. Contrôle de la direction des moteurs 1 et 3.                                                         *
 * Broche 5 : Contrôle de la vitesse des moteurs 1 et 3. Sans mode PWM (0 = arrêt, 1 = maximale), ou avec mode PWM (0 = arrêt, 255 = maximale). *
 * Broche 6 : Contrôle de la vitesse des moteurs 2 et 4. Sans mode PWM (0 = arrêt, 1 = maximale), ou avec mode PWM (0 = arrêt, 255 = maximale). *
 * Broche 7 : VCC pour les moteurs 2 et 4. Contrôle de la direction des moteurs 2 et 4.                                                         *
 * Broche 8 : GND pour les moteurs 2 et 4.                                                                                                      *
 ************************************************************************************************************************************************/

// Broches contrôlant les différents moteurs du robot.
#define BROCHE_DIRECTION_M1M3_GND 3
#define BROCHE_DIRECTION_M1M3_VCC 4
#define BROCHE_VITESSE_M1M3 5
#define BROCHE_VITESSE_M2M4 6
#define BROCHE_DIRECTION_M2M4_VCC 7
#define BROCHE_DIRECTION_M2M4_GND 8

void setup() {
  int noBroche;

  // Initialisation du port série pour son utilisation avec le Moniteur série.
  Serial.begin(9600);

  // Les broches 3 à 8, servant au contrôle des roues du robot, sont configurées pour la sortie d'un signal.
  for (noBroche = 3; noBroche <= 8; noBroche++)
  {
    pinMode(noBroche, OUTPUT);
  }

  // Mouvement 1.
  // Faire avancer le robot en ligne droite, pleine vitesse.
  // Les roues des moteurs 1 et 3 tournent ici à la même vitesse et dans le même sens que celles des moteurs 2 et 4.
  Serial.println("Le robot avance en ligne droite, pleine vitesse.");
  digitalWrite(BROCHE_DIRECTION_M1M3_VCC, HIGH); // HIGH ou 1.
  digitalWrite(BROCHE_DIRECTION_M1M3_GND, LOW); // LOW ou 0.
  analogWrite(BROCHE_VITESSE_M1M3, 255); // Mode PWM. 255/255.
  digitalWrite(BROCHE_DIRECTION_M2M4_VCC, HIGH); //  HIGH ou 1.
  digitalWrite(BROCHE_DIRECTION_M2M4_GND, LOW); // LOW ou 0.
  analogWrite(BROCHE_VITESSE_M2M4, 255); // Mode PWM. 255/255.
  // Laisser le mouvement actuel se poursuivre pendant 5 secondes.
  delay(5000);

  // Mouvement 2.
  // Arrêter le robot.
  // Il suffit d'appliquer une vitesse nulle aux quatre moteurs.
  Serial.println("Arret du robot.");
  analogWrite(BROCHE_VITESSE_M1M3, 0);
  analogWrite(BROCHE_VITESSE_M2M4, 0);
  // Laisser l'absence de mouvement se poursuivre pendant 2 secondes.
  delay(2000);
  
  // Mouvement 3.
  // Faire pivoter le robot sur la droite.
  // Deux façons de tourner :
  //  1. Virage serré, en pivotant le robot sur lui-même, en faisant tourner les roues
  //     d'un côté à la même vitesse et dans le sens inverse de celles de l'autre côté.
  //  2. Virage à rayon variable, en faisant tourner les roues d'un côté à une vitesse différente et
  //     dans le même sens que celles de l'autre côté.
  Serial.println("Le robot pivote sur la droite.");
  digitalWrite(BROCHE_DIRECTION_M1M3_VCC, LOW);
  digitalWrite(BROCHE_DIRECTION_M1M3_GND, HIGH);
  analogWrite(BROCHE_VITESSE_M1M3, 255);
  digitalWrite(BROCHE_DIRECTION_M2M4_VCC, HIGH);
  digitalWrite(BROCHE_DIRECTION_M2M4_GND, LOW);
  analogWrite(BROCHE_VITESSE_M2M4, 255);
  // Laisser le mouvement actuel se poursuivre pendant 5 secondes.
  delay(5000);

  // Mouvement 4.
  // Arrêter le robot.
  // Il suffit d'appliquer une vitesse nulle aux quatre moteurs.
  Serial.println("Arret du robot.");
  analogWrite(BROCHE_VITESSE_M1M3, 0);
  analogWrite(BROCHE_VITESSE_M2M4, 0);
  // Laisser l'absence de mouvement se poursuivre pendant 2 secondes.
  delay(2000);
  
  // Mouvement 5.
  // Faire avancer le robot en tournant vers la gauche, pleine vitesse.
  // Les roues des moteurs 2 et 4 tournent ici à une vitesse inférieure et dans le même sens que celles des moteurs 1 et 3.
  Serial.println("Le robot avance en tournant vers la gauche, pleine vitesse.");
  digitalWrite(BROCHE_DIRECTION_M1M3_VCC, HIGH);
  digitalWrite(BROCHE_DIRECTION_M1M3_GND, LOW);
  analogWrite(BROCHE_VITESSE_M1M3, 255);
  digitalWrite(BROCHE_DIRECTION_M2M4_VCC, HIGH);
  digitalWrite(BROCHE_DIRECTION_M2M4_GND, LOW);
  analogWrite(BROCHE_VITESSE_M2M4, 150);
  // Laisser le mouvement actuel se poursuivre pendant 5 secondes.
  delay(5000);

  // Mouvement 6.
  // Arrêter le robot.
  // Il suffit d'appliquer une vitesse nulle aux quatre moteurs.
  Serial.println("Arret du robot.");
  analogWrite(BROCHE_VITESSE_M1M3, 0);
  analogWrite(BROCHE_VITESSE_M2M4, 0);
}

void loop() {
}